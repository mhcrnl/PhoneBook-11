import unittest.mockimport modelfrom data_manager import LocalDataManagerclass TestModel(unittest.TestCase):    def test_create_check(self):        run = model.Model(LocalDataManager()).contact_check('Arnold', 'Schwarzenegger', '0101')        self.assertTrue(run)        run = model.Model(LocalDataManager()).contact_check('Ivan', 'Ivanovich', '4695')        self.assertFalse(run)    def test_create_contact(self):        run = model.Model(LocalDataManager()).create('Ivan', 'Ivanovich', '4695')        res = 'Contact was successfully created.'        self.assertEqual(run, res)    def test_read(self):        run = model.Model(LocalDataManager()).read('102')        res = ['ID: 2 Name: Bruce Willis Phone: 102']        self.assertEqual(run, res)    def test_read_all(self):        run = model.Model(LocalDataManager()).read_all()        res = 'Name: Bruce Willis Phone: 102'        self.assertTrue(res in run)    def test_update_contact(self):        run = model.Model(LocalDataManager()).update(3, 'Sylvester', 'Stallone', '103')        res = 'Contact was successfully updated.'        self.assertEqual(run, res)    def test_delete_contact(self):        res = list(model.Model(LocalDataManager()).data_manager.database_conn.contacts.find())        last_id = max([x['_id'] for x in res])        run = model.Model(LocalDataManager()).delete(last_id)        res = 'Contact was successfully deleted.'        self.assertEqual(run, res)    def test_select_id(self):        run = model.Model(LocalDataManager()).select_id('1', ['ID: 2 Name: Bruce Willis Phone: 102'])        res = 'ID "1" is not in the search result.'        self.assertEqual(run, res)